# expandcsv.py will expand some columns in the csv files generated by parquet2csv.py

import pandas as pd
import re
 
import csv

def expand_names(value):
    try:
        name_match = re.search(r'value=(.*?), language=(.*?)\}', value)
        return name_match.groups() if name_match else ('', '')
    except:
        return '', ''

def expand_categories(value):
    try:
        main_match = re.search(r"'main': (.*?),", value)
        alternate_match = re.search(r"'alternate': \[(.*?)\]", value)
        main = main_match.group(1) if main_match else ''
        alternate = alternate_match.group(1) if alternate_match else ''
        return main, alternate.replace(' ', '').replace("'", "")
    except:
        return '', ''

def expand_addresses(addresses_str):
    try:
        locality = re.search(r"locality=(.*?)(,|\])", addresses_str).group(1) if re.search(r"locality=(.*?)(,|\])", addresses_str) else ''
        postcode = re.search(r"postcode=(.*?)(,|\])", addresses_str).group(1) if re.search(r"postcode=(.*?)(,|\])", addresses_str) else ''
        freeform = re.search(r"freeform=(.*?)(,|\])", addresses_str).group(1) if re.search(r"freeform=(.*?)(,|\])", addresses_str) else ''
        region = re.search(r"region=(.*?)(,|\])", addresses_str).group(1) if re.search(r"region=(.*?)(,|\])", addresses_str) else ''
        country = re.search(r"country=(.*?)(,|\])", addresses_str).group(1) if re.search(r"country=(.*?)(,|\])", addresses_str) else ''
        return locality, postcode, freeform, region, country
    except:
        return '', '', '', '', ''
		
def expand_bbox(value):
    try:
        value_dict = ast.literal_eval(value)
        return value_dict.get('minx', ''), value_dict.get('maxx', ''), value_dict.get('miny', ''), value_dict.get('maxy', '')
    except:
        return '', '', '', ''

def expand_columns(input_file, output_file):
    df = pd.read_csv(input_file)
    df['names_name'], df['names_language'] = zip(*df['names'].map(expand_names))
    df['categories_main'], df['categories_alternate'] = zip(*df['categories'].map(expand_categories))
    df['bbox_minx'], df['bbox_maxx'], df['bbox_miny'], df['bbox_maxy'] = zip(*df['bbox'].map(expand_bbox))
    df.drop(columns=['names', 'categories', 'bbox'], inplace=True)
    # Expand the addresses column
    df['addresses_locality'], df['addresses_postcode'], df['addresses_freeform'], df['addresses_region'], df['addresses_country'] = zip(*df['addresses'].map(expand_addresses))
    df.drop(columns=['addresses'], inplace=True)
    
    # Updated line to ensure that all values are enclosed in double quotes
    df.to_csv(output_file, index=False, quoting=csv.QUOTE_ALL, quotechar='"')

if __name__ == "__main__":
    import sys
    input_file = sys.argv[1]
    output_file = sys.argv[2]
    expand_columns(input_file, output_file)

